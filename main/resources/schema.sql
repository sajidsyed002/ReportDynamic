DROP TABLE IF EXISTS REPORT_CONFIGURATION;
CREATE TABLE REPORT_CONFIGURATION (  
report_id INT AUTO_INCREMENT  PRIMARY KEY,  
report_name VARCHAR(30) NOT NULL,  
report_type VARCHAR(20) NOT NULL
);

DROP TABLE IF EXISTS COLUMN_CONFIGURATION;
CREATE TABLE COLUMN_CONFIGURATION (
COLUMN_ID INT AUTO_INCREMENT  PRIMARY KEY,
COLUMN_NAME VARCHAR(30) NOT NULL,
COLOR VARCHAR(20) NOT NULL,
DATA_LENGTH INT NOT NULL,
FONT_STYLE VARCHAR(20) NOT NULL,
FONT_SIZE INT NOT NULL
);

DROP TABLE IF EXISTS HEDGE_DATA;
CREATE TABLE HEDGE_DATA (
ID VARCHAR(5) PRIMARY KEY,
FUND_NAME VARCHAR(20) NOT NULL,
MANAGER VARCHAR(30) NOT NULL,
MANAGER_CONTACT VARCHAR(20) NOT NULL,
STRATEGY VARCHAR(30) NOT NULL,
GEO_FOCUS VARCHAR(20) NOT NULL,
FUND_INCEPTION INT NOT NULL,
MANAGER_FOUNDED INT NOT NULL
);

DROP TABLE IF EXISTS BRIDGE_CONFIGURATION;
CREATE TABLE BRIDGE_CONFIGURATION (  
report_id INT,  
COLUMN_ID INT,
PRIMARY KEY (report_id,COLUMN_ID),
FOREIGN KEY (report_id) REFERENCES REPORT_CONFIGURATION(report_id),
FOREIGN KEY (COLUMN_ID) REFERENCES COLUMN_CONFIGURATION(COLUMN_ID)
);

DROP TABLE IF EXISTS REPORT_CONFIGURATION;
CREATE TABLE REPORT_CONFIGURATION (
report_id INT AUTO_INCREMENT  PRIMARY KEY,
report_name VARCHAR(30) NOT NULL,
report_type VARCHAR(20) NOT NULL
);

DROP TABLE IF EXISTS SCHEDULE_CONFIG;
CREATE TABLE SCHEDULE_CONFIG (
report_id INT PRIMARY KEY,
cron_expression VARCHAR(30)
);


